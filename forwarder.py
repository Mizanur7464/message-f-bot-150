import asyncio
from telethon import TelegramClient, events

# === ржПржЦрж╛ржирзЗ ржЖржкржирж╛рж░ рждржерзНржп ржмрж╕рж╛ржи ===
api_id = 24607929 # ржЖржкржирж╛рж░ my.telegram.org ржерзЗржХрзЗ ржкрж╛ржУржпрж╝рж╛ API ID
api_hash = '6d7028e6aec86b06e4524439c4a8394b'  # ржЖржкржирж╛рж░ API HASH

client = TelegramClient('forwarder.session', api_id, api_hash)

# рж╕рзЛрж░рзНрж╕ (auto signal) ржУ ржЯрж╛рж░рзНржЧрзЗржЯ (ржбрзЗржорзЛ ржЧрзНрж░рзБржк) ржЖржЗржбрж┐
SOURCE_CHANNEL_ID = -1001998961899  # ржпрзЗржЦрж╛ржи ржерзЗржХрзЗ рж╕рж┐ржЧржирж╛рж▓ ржлрж░рзЛржпрж╝рж╛рж░рзНржб рж╣ржмрзЗ
TARGET_GROUP_ID = -1002711701479   # ржбрзЗржорзЛ ржЧрзНрж░рзБржкрзЗрж░ ржЖржЗржбрж┐ (рж░рж┐ржпрж╝рзЗрж▓-ржЯрж╛ржЗржо)

# URL рж░рж┐ржкрзНрж▓рзЗрж╕ржорзЗржирзНржЯ ржлрж┐ржЪрж╛рж░ рж╕рж░рж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ

@client.on(events.NewMessage(chats=SOURCE_CHANNEL_ID))
async def forward_signal(event):
    try:
        # рзз ржорж┐ржирж┐ржЯ (рзмрзж рж╕рзЗржХрзЗржирзНржб) ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи
        await asyncio.sleep(60)
        text = event.message.text or ""
        # URL рж░рж┐ржкрзНрж▓рзЗрж╕ ржХрж░рж╛ рж╣ржмрзЗ ржирж╛ - ржЕрж░рж┐ржЬрж┐ржирж╛рж▓ ржЯрзЗржХрзНрж╕ржЯ рж░рж╛ржЦрж╛ рж╣ржмрзЗ
        if event.message.media:
            await client.send_file(
                TARGET_GROUP_ID,
                file=event.message.media,
                caption=text
            )
            print(f"тЬЕ Real-time forwarded media message {event.message.id} to {TARGET_GROUP_ID}")
        elif text:
            await client.send_message(TARGET_GROUP_ID, text)
            print(f"тЬЕ Real-time forwarded text message {event.message.id} to {TARGET_GROUP_ID}")
        else:
            print(f"тЪая╕П Unknown message type: {event.message.id}")
    except Exception as e:
        print(f"тЭМ Error forwarding: {e}")

print("ЁЯЪА Starting real-time signal forwarder...")
print(f"ЁЯУд Source: {SOURCE_CHANNEL_ID}")
print(f"ЁЯУе Target 1 (Real-time): {TARGET_GROUP_ID}")
print("=" * 50)

client.start()
client.run_until_disconnected() 